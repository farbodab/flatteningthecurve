"""empty message

Revision ID: b4b9356c964a
Revises: 
Create Date: 2020-06-11 11:34:35.538782

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b4b9356c964a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('canadamortality',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('death_id', sa.Integer(), nullable=True),
    sa.Column('province_death_id', sa.Integer(), nullable=True),
    sa.Column('age', sa.String(), nullable=True),
    sa.Column('sex', sa.String(), nullable=True),
    sa.Column('region', sa.String(), nullable=True),
    sa.Column('province', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('death_source', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_canadamortality_date'), 'canadamortality', ['date'], unique=False)
    op.create_index(op.f('ix_canadamortality_death_id'), 'canadamortality', ['death_id'], unique=False)
    op.create_index(op.f('ix_canadamortality_province_death_id'), 'canadamortality', ['province_death_id'], unique=False)
    op.create_table('canadarecovered',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('province', sa.String(), nullable=True),
    sa.Column('cumulative_recovered', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_canadarecovered_date'), 'canadarecovered', ['date'], unique=False)
    op.create_index(op.f('ix_canadarecovered_province'), 'canadarecovered', ['province'], unique=False)
    op.create_table('canadatesting',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('province', sa.String(), nullable=True),
    sa.Column('cumulative_testing', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_canadatesting_date'), 'canadatesting', ['date'], unique=False)
    op.create_index(op.f('ix_canadatesting_province'), 'canadatesting', ['province'], unique=False)
    op.create_table('casesstatus',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reported_date', sa.DateTime(), nullable=True),
    sa.Column('confirmed_negative', sa.Integer(), nullable=True),
    sa.Column('presumptive_negative', sa.Integer(), nullable=True),
    sa.Column('presumptive_positive', sa.Integer(), nullable=True),
    sa.Column('confirmed_positive', sa.Integer(), nullable=True),
    sa.Column('resolved', sa.Integer(), nullable=True),
    sa.Column('deaths', sa.Integer(), nullable=True),
    sa.Column('total_cases', sa.Integer(), nullable=True),
    sa.Column('patients_approved', sa.Integer(), nullable=True),
    sa.Column('tests_today', sa.Integer(), nullable=True),
    sa.Column('under_investigation', sa.Integer(), nullable=True),
    sa.Column('hospitalized', sa.Integer(), nullable=True),
    sa.Column('icu', sa.Integer(), nullable=True),
    sa.Column('icu_ventilator', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_casesstatus_reported_date'), 'casesstatus', ['reported_date'], unique=False)
    op.create_table('comparison',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('province', sa.String(), nullable=True),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_comparison_date'), 'comparison', ['date'], unique=False)
    op.create_index(op.f('ix_comparison_province'), 'comparison', ['province'], unique=False)
    op.create_table('confirmedontario',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('row_id', sa.Integer(), nullable=True),
    sa.Column('accurate_episode_date', sa.DateTime(), nullable=True),
    sa.Column('age_group', sa.String(), nullable=True),
    sa.Column('client_gender', sa.String(), nullable=True),
    sa.Column('case_acquisitionInfo', sa.String(), nullable=True),
    sa.Column('outcome1', sa.String(), nullable=True),
    sa.Column('outbreak_related', sa.String(), nullable=True),
    sa.Column('reporting_phu', sa.String(), nullable=True),
    sa.Column('reporting_phu_address', sa.String(), nullable=True),
    sa.Column('reporting_phu_city', sa.String(), nullable=True),
    sa.Column('reporting_phu_postal_code', sa.String(), nullable=True),
    sa.Column('reporting_phu_website', sa.String(), nullable=True),
    sa.Column('reporting_phu_latitude', sa.String(), nullable=True),
    sa.Column('reporting_phu_longitude', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_confirmedontario_accurate_episode_date'), 'confirmedontario', ['accurate_episode_date'], unique=False)
    op.create_index(op.f('ix_confirmedontario_row_id'), 'confirmedontario', ['row_id'], unique=False)
    op.create_table('covid',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('case_id', sa.Integer(), nullable=True),
    sa.Column('age', sa.String(length=120), nullable=True),
    sa.Column('sex', sa.String(length=120), nullable=True),
    sa.Column('region', sa.String(length=120), nullable=True),
    sa.Column('province', sa.String(length=120), nullable=True),
    sa.Column('country', sa.String(length=120), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('travel', sa.String(), nullable=True),
    sa.Column('travelh', sa.String(length=120), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_covid_case_id'), 'covid', ['case_id'], unique=False)
    op.create_index(op.f('ix_covid_date'), 'covid', ['date'], unique=False)
    op.create_table('covidtests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('negative', sa.Integer(), nullable=True),
    sa.Column('investigation', sa.Integer(), nullable=True),
    sa.Column('positive', sa.Integer(), nullable=True),
    sa.Column('resolved', sa.Integer(), nullable=True),
    sa.Column('deaths', sa.Integer(), nullable=True),
    sa.Column('total', sa.Integer(), nullable=True),
    sa.Column('hospitalized', sa.Integer(), nullable=True),
    sa.Column('icu', sa.Integer(), nullable=True),
    sa.Column('ventilator', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_covidtests_date'), 'covidtests', ['date'], unique=False)
    op.create_table('governmentresponse',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('country_code', sa.String(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('s1_school_closing', sa.Integer(), nullable=True),
    sa.Column('s1_is_general', sa.Integer(), nullable=True),
    sa.Column('s1_notes', sa.String(), nullable=True),
    sa.Column('s2_workplace_closing', sa.Integer(), nullable=True),
    sa.Column('s2_is_general', sa.Integer(), nullable=True),
    sa.Column('s2_notes', sa.String(), nullable=True),
    sa.Column('s3_cancel_public_events', sa.Integer(), nullable=True),
    sa.Column('s3_is_general', sa.Integer(), nullable=True),
    sa.Column('s3_notes', sa.String(), nullable=True),
    sa.Column('s4_close_public_transport', sa.Integer(), nullable=True),
    sa.Column('s4_is_general', sa.Integer(), nullable=True),
    sa.Column('s4_notes', sa.String(), nullable=True),
    sa.Column('s5_public_information_campaigns', sa.Integer(), nullable=True),
    sa.Column('s5_is_general', sa.Integer(), nullable=True),
    sa.Column('s5_notes', sa.String(), nullable=True),
    sa.Column('s6_restrictions_on_internal_movement', sa.Integer(), nullable=True),
    sa.Column('s6_is_general', sa.Integer(), nullable=True),
    sa.Column('s6_notes', sa.String(), nullable=True),
    sa.Column('s7_international_travel_controls', sa.Integer(), nullable=True),
    sa.Column('s7_notes', sa.String(), nullable=True),
    sa.Column('s8_fiscal_measures', sa.BigInteger(), nullable=True),
    sa.Column('s8_notes', sa.String(), nullable=True),
    sa.Column('s9_monetary_measures', sa.Float(), nullable=True),
    sa.Column('s9_notes', sa.String(), nullable=True),
    sa.Column('s10_emergency_investment_in_healthcare', sa.BigInteger(), nullable=True),
    sa.Column('s10_notes', sa.String(), nullable=True),
    sa.Column('s11_investement_in_vaccines', sa.BigInteger(), nullable=True),
    sa.Column('s11_notes', sa.String(), nullable=True),
    sa.Column('s12_testing_framework', sa.Integer(), nullable=True),
    sa.Column('s12_notes', sa.String(), nullable=True),
    sa.Column('s13_contact_tracing', sa.Integer(), nullable=True),
    sa.Column('s13_notes', sa.String(), nullable=True),
    sa.Column('confirmed_cases', sa.Integer(), nullable=True),
    sa.Column('confirmed_deaths', sa.Integer(), nullable=True),
    sa.Column('stringency_index', sa.Float(), nullable=True),
    sa.Column('stringency_index_for_display', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_governmentresponse_country'), 'governmentresponse', ['country'], unique=False)
    op.create_index(op.f('ix_governmentresponse_date'), 'governmentresponse', ['date'], unique=False)
    op.create_table('icucapacity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('icu_level', sa.String(), nullable=True),
    sa.Column('region', sa.String(), nullable=True),
    sa.Column('lhin', sa.String(), nullable=True),
    sa.Column('critical_care_beds', sa.Integer(), nullable=True),
    sa.Column('critical_care_patients', sa.Integer(), nullable=True),
    sa.Column('vented_beds', sa.Integer(), nullable=True),
    sa.Column('vented_patients', sa.Integer(), nullable=True),
    sa.Column('suspected_covid', sa.Integer(), nullable=True),
    sa.Column('suspected_covid_ventilator', sa.Integer(), nullable=True),
    sa.Column('confirmed_positive', sa.Integer(), nullable=True),
    sa.Column('confirmed_positive_ventilator', sa.Integer(), nullable=True),
    sa.Column('confirmed_negative', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_icucapacity_date'), 'icucapacity', ['date'], unique=False)
    op.create_table('ideamodel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('reported_cases', sa.Integer(), nullable=True),
    sa.Column('model_incident_cases', sa.Float(), nullable=True),
    sa.Column('model_incident_cases_lower_PI', sa.Float(), nullable=True),
    sa.Column('model_incident_cases_upper_PI', sa.Float(), nullable=True),
    sa.Column('reported_cumulative_cases', sa.Integer(), nullable=True),
    sa.Column('model_cumulative_cases', sa.Float(), nullable=True),
    sa.Column('model_cumulative_cases_lower_PI', sa.Float(), nullable=True),
    sa.Column('model_cumulative_cases_upper_PI', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ideamodel_date'), 'ideamodel', ['date'], unique=False)
    op.create_index(op.f('ix_ideamodel_source'), 'ideamodel', ['source'], unique=False)
    op.create_table('internationaldata',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('cases', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_internationaldata_country'), 'internationaldata', ['country'], unique=False)
    op.create_index(op.f('ix_internationaldata_date'), 'internationaldata', ['date'], unique=False)
    op.create_table('internationalmortality',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('deaths', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_internationalmortality_country'), 'internationalmortality', ['country'], unique=False)
    op.create_index(op.f('ix_internationalmortality_date'), 'internationalmortality', ['date'], unique=False)
    op.create_table('internationalrecovered',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('recovered', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_internationalrecovered_country'), 'internationalrecovered', ['country'], unique=False)
    op.create_index(op.f('ix_internationalrecovered_date'), 'internationalrecovered', ['date'], unique=False)
    op.create_table('internationaltesting',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('region', sa.String(), nullable=True),
    sa.Column('cumulative_testing', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_internationaltesting_date'), 'internationaltesting', ['date'], unique=False)
    op.create_index(op.f('ix_internationaltesting_region'), 'internationaltesting', ['region'], unique=False)
    op.create_table('longtermcare',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('home', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('beds', sa.Integer(), nullable=True),
    sa.Column('confirmed_resident_cases', sa.Integer(), nullable=True),
    sa.Column('resident_deaths', sa.Integer(), nullable=True),
    sa.Column('confirmed_staff_cases', sa.Integer(), nullable=True),
    sa.Column('phu', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_longtermcare_date'), 'longtermcare', ['date'], unique=False)
    op.create_table('longtermcare_nolongerinoutbreak',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('home', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('beds', sa.Integer(), nullable=True),
    sa.Column('resident_deaths', sa.Integer(), nullable=True),
    sa.Column('phu', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_longtermcare_nolongerinoutbreak_date'), 'longtermcare_nolongerinoutbreak', ['date'], unique=False)
    op.create_table('longtermcare_summary',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('report', sa.String(), nullable=True),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_longtermcare_summary_date'), 'longtermcare_summary', ['date'], unique=False)
    op.create_table('members',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('education', sa.String(), nullable=True),
    sa.Column('affiliation', sa.String(), nullable=True),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('team_status', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_members_first_name'), 'members', ['first_name'], unique=False)
    op.create_index(op.f('ix_members_last_name'), 'members', ['last_name'], unique=False)
    op.create_index(op.f('ix_members_team'), 'members', ['team'], unique=False)
    op.create_table('mobility',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('region', sa.String(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mobility_date'), 'mobility', ['date'], unique=False)
    op.create_table('mobilitytransportation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('region', sa.String(), nullable=True),
    sa.Column('transportation_type', sa.String(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mobilitytransportation_date'), 'mobilitytransportation', ['date'], unique=False)
    op.create_table('npiinterventions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('region', sa.String(), nullable=True),
    sa.Column('subregion', sa.String(), nullable=True),
    sa.Column('intervention_summary', sa.String(), nullable=True),
    sa.Column('intervention_category', sa.String(), nullable=True),
    sa.Column('target_population_category', sa.String(), nullable=True),
    sa.Column('enforcement_category', sa.String(), nullable=True),
    sa.Column('oxford_government_response_category', sa.String(), nullable=True),
    sa.Column('oxford_closure_code', sa.String(), nullable=True),
    sa.Column('oxford_public_info_code', sa.String(), nullable=True),
    sa.Column('oxford_travel_code', sa.String(), nullable=True),
    sa.Column('oxford_geographic_target_code', sa.String(), nullable=True),
    sa.Column('oxford_fiscal_measure_cad', sa.String(), nullable=True),
    sa.Column('oxford_monetary_measure', sa.String(), nullable=True),
    sa.Column('oxford_testing_code', sa.String(), nullable=True),
    sa.Column('oxford_tracing_code', sa.String(), nullable=True),
    sa.Column('source_url', sa.String(), nullable=True),
    sa.Column('source_organization', sa.String(), nullable=True),
    sa.Column('source_organization_two', sa.String(), nullable=True),
    sa.Column('source_category', sa.String(), nullable=True),
    sa.Column('source_title', sa.String(), nullable=True),
    sa.Column('source_full_text', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_npiinterventions_country'), 'npiinterventions', ['country'], unique=False)
    op.create_index(op.f('ix_npiinterventions_end_date'), 'npiinterventions', ['end_date'], unique=False)
    op.create_index(op.f('ix_npiinterventions_intervention_summary'), 'npiinterventions', ['intervention_summary'], unique=False)
    op.create_index(op.f('ix_npiinterventions_region'), 'npiinterventions', ['region'], unique=False)
    op.create_index(op.f('ix_npiinterventions_start_date'), 'npiinterventions', ['start_date'], unique=False)
    op.create_index(op.f('ix_npiinterventions_subregion'), 'npiinterventions', ['subregion'], unique=False)
    op.create_table('npiinterventions_usa',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('county', sa.String(), nullable=True),
    sa.Column('npi', sa.String(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('citation', sa.String(), nullable=True),
    sa.Column('note', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_npiinterventions_usa_npi'), 'npiinterventions_usa', ['npi'], unique=False)
    op.create_index(op.f('ix_npiinterventions_usa_state'), 'npiinterventions_usa', ['state'], unique=False)
    op.create_table('phucapacity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('icu', sa.Integer(), nullable=True),
    sa.Column('acute', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_phucapacity_name'), 'phucapacity', ['name'], unique=False)
    op.create_table('predictivemodel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('region', sa.String(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('cumulative_incidence', sa.Integer(), nullable=True),
    sa.Column('required_hospW', sa.Integer(), nullable=True),
    sa.Column('required_hospNonVentICU', sa.Integer(), nullable=True),
    sa.Column('required_hospVentICU', sa.Integer(), nullable=True),
    sa.Column('available_hospW', sa.Integer(), nullable=True),
    sa.Column('available_hospNonVentICU', sa.Integer(), nullable=True),
    sa.Column('available_hospVentICU', sa.Integer(), nullable=True),
    sa.Column('waiting_hospW', sa.Integer(), nullable=True),
    sa.Column('waiting_hospNonVentICU', sa.Integer(), nullable=True),
    sa.Column('waiting_hospVentICU', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_predictivemodel_date'), 'predictivemodel', ['date'], unique=False)
    op.create_index(op.f('ix_predictivemodel_region'), 'predictivemodel', ['region'], unique=False)
    op.create_table('source',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('region', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('data_feed_type', sa.String(), nullable=True),
    sa.Column('link', sa.String(), nullable=True),
    sa.Column('refresh', sa.String(), nullable=True),
    sa.Column('contributor', sa.String(), nullable=True),
    sa.Column('contact', sa.String(), nullable=True),
    sa.Column('download', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_source_name'), 'source', ['name'], unique=False)
    op.create_index(op.f('ix_source_region'), 'source', ['region'], unique=False)
    op.create_index(op.f('ix_source_type'), 'source', ['type'], unique=False)
    op.create_table('viz',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('header', sa.String(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('content', sa.String(), nullable=True),
    sa.Column('viz', sa.String(), nullable=True),
    sa.Column('thumbnail', sa.String(), nullable=True),
    sa.Column('text_top', sa.String(), nullable=True),
    sa.Column('text_bottom', sa.String(), nullable=True),
    sa.Column('mobileHeight', sa.Integer(), nullable=True),
    sa.Column('desktopHeight', sa.Integer(), nullable=True),
    sa.Column('page', sa.String(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('row', sa.Integer(), nullable=True),
    sa.Column('column', sa.Integer(), nullable=True),
    sa.Column('html', sa.String(), nullable=True),
    sa.Column('phu', sa.String(), nullable=True),
    sa.Column('tab_order', sa.Integer(), nullable=True),
    sa.Column('viz_type', sa.String(), nullable=True),
    sa.Column('viz_title', sa.String(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('visible', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_viz_header'), 'viz', ['header'], unique=False)
    op.create_index(op.f('ix_viz_page'), 'viz', ['page'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_viz_page'), table_name='viz')
    op.drop_index(op.f('ix_viz_header'), table_name='viz')
    op.drop_table('viz')
    op.drop_index(op.f('ix_source_type'), table_name='source')
    op.drop_index(op.f('ix_source_region'), table_name='source')
    op.drop_index(op.f('ix_source_name'), table_name='source')
    op.drop_table('source')
    op.drop_index(op.f('ix_predictivemodel_region'), table_name='predictivemodel')
    op.drop_index(op.f('ix_predictivemodel_date'), table_name='predictivemodel')
    op.drop_table('predictivemodel')
    op.drop_index(op.f('ix_phucapacity_name'), table_name='phucapacity')
    op.drop_table('phucapacity')
    op.drop_index(op.f('ix_npiinterventions_usa_state'), table_name='npiinterventions_usa')
    op.drop_index(op.f('ix_npiinterventions_usa_npi'), table_name='npiinterventions_usa')
    op.drop_table('npiinterventions_usa')
    op.drop_index(op.f('ix_npiinterventions_subregion'), table_name='npiinterventions')
    op.drop_index(op.f('ix_npiinterventions_start_date'), table_name='npiinterventions')
    op.drop_index(op.f('ix_npiinterventions_region'), table_name='npiinterventions')
    op.drop_index(op.f('ix_npiinterventions_intervention_summary'), table_name='npiinterventions')
    op.drop_index(op.f('ix_npiinterventions_end_date'), table_name='npiinterventions')
    op.drop_index(op.f('ix_npiinterventions_country'), table_name='npiinterventions')
    op.drop_table('npiinterventions')
    op.drop_index(op.f('ix_mobilitytransportation_date'), table_name='mobilitytransportation')
    op.drop_table('mobilitytransportation')
    op.drop_index(op.f('ix_mobility_date'), table_name='mobility')
    op.drop_table('mobility')
    op.drop_index(op.f('ix_members_team'), table_name='members')
    op.drop_index(op.f('ix_members_last_name'), table_name='members')
    op.drop_index(op.f('ix_members_first_name'), table_name='members')
    op.drop_table('members')
    op.drop_index(op.f('ix_longtermcare_summary_date'), table_name='longtermcare_summary')
    op.drop_table('longtermcare_summary')
    op.drop_index(op.f('ix_longtermcare_nolongerinoutbreak_date'), table_name='longtermcare_nolongerinoutbreak')
    op.drop_table('longtermcare_nolongerinoutbreak')
    op.drop_index(op.f('ix_longtermcare_date'), table_name='longtermcare')
    op.drop_table('longtermcare')
    op.drop_index(op.f('ix_internationaltesting_region'), table_name='internationaltesting')
    op.drop_index(op.f('ix_internationaltesting_date'), table_name='internationaltesting')
    op.drop_table('internationaltesting')
    op.drop_index(op.f('ix_internationalrecovered_date'), table_name='internationalrecovered')
    op.drop_index(op.f('ix_internationalrecovered_country'), table_name='internationalrecovered')
    op.drop_table('internationalrecovered')
    op.drop_index(op.f('ix_internationalmortality_date'), table_name='internationalmortality')
    op.drop_index(op.f('ix_internationalmortality_country'), table_name='internationalmortality')
    op.drop_table('internationalmortality')
    op.drop_index(op.f('ix_internationaldata_date'), table_name='internationaldata')
    op.drop_index(op.f('ix_internationaldata_country'), table_name='internationaldata')
    op.drop_table('internationaldata')
    op.drop_index(op.f('ix_ideamodel_source'), table_name='ideamodel')
    op.drop_index(op.f('ix_ideamodel_date'), table_name='ideamodel')
    op.drop_table('ideamodel')
    op.drop_index(op.f('ix_icucapacity_date'), table_name='icucapacity')
    op.drop_table('icucapacity')
    op.drop_index(op.f('ix_governmentresponse_date'), table_name='governmentresponse')
    op.drop_index(op.f('ix_governmentresponse_country'), table_name='governmentresponse')
    op.drop_table('governmentresponse')
    op.drop_index(op.f('ix_covidtests_date'), table_name='covidtests')
    op.drop_table('covidtests')
    op.drop_index(op.f('ix_covid_date'), table_name='covid')
    op.drop_index(op.f('ix_covid_case_id'), table_name='covid')
    op.drop_table('covid')
    op.drop_index(op.f('ix_confirmedontario_row_id'), table_name='confirmedontario')
    op.drop_index(op.f('ix_confirmedontario_accurate_episode_date'), table_name='confirmedontario')
    op.drop_table('confirmedontario')
    op.drop_index(op.f('ix_comparison_province'), table_name='comparison')
    op.drop_index(op.f('ix_comparison_date'), table_name='comparison')
    op.drop_table('comparison')
    op.drop_index(op.f('ix_casesstatus_reported_date'), table_name='casesstatus')
    op.drop_table('casesstatus')
    op.drop_index(op.f('ix_canadatesting_province'), table_name='canadatesting')
    op.drop_index(op.f('ix_canadatesting_date'), table_name='canadatesting')
    op.drop_table('canadatesting')
    op.drop_index(op.f('ix_canadarecovered_province'), table_name='canadarecovered')
    op.drop_index(op.f('ix_canadarecovered_date'), table_name='canadarecovered')
    op.drop_table('canadarecovered')
    op.drop_index(op.f('ix_canadamortality_province_death_id'), table_name='canadamortality')
    op.drop_index(op.f('ix_canadamortality_death_id'), table_name='canadamortality')
    op.drop_index(op.f('ix_canadamortality_date'), table_name='canadamortality')
    op.drop_table('canadamortality')
    # ### end Alembic commands ###
