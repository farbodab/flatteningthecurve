"""empty message

Revision ID: 1b9ed2c015a6
Revises: a7535fc05877
Create Date: 2020-06-09 10:13:28.748680

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1b9ed2c015a6'
down_revision = 'a7535fc05877'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('healthregions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('province', sa.String(), nullable=True),
    sa.Column('eng_name', sa.String(), nullable=True),
    sa.Column('fr_name', sa.String(), nullable=True),
    sa.Column('population', sa.Integer(), nullable=True),
    sa.Column('region_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_healthregions_eng_name'), 'healthregions', ['eng_name'], unique=False)
    op.create_index(op.f('ix_healthregions_fr_name'), 'healthregions', ['fr_name'], unique=False)
    op.create_index(op.f('ix_healthregions_region_id'), 'healthregions', ['region_id'], unique=False)
    op.create_table('healthregionsdata',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('region_id', sa.Integer(), nullable=True),
    sa.Column('cases_cumulative', sa.Integer(), nullable=True),
    sa.Column('deaths_cumulative', sa.Integer(), nullable=True),
    sa.Column('recovered_cumulative', sa.Integer(), nullable=True),
    sa.Column('tests_cumulative', sa.Integer(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['region_id'], ['healthregions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_healthregionsdata_date'), 'healthregionsdata', ['date'], unique=False)
    op.drop_index('ix_predictivemodel_timeline_date', table_name='predictivemodel_timeline')
    op.drop_index('ix_predictivemodel_timeline_date_retrieved', table_name='predictivemodel_timeline')
    op.drop_index('ix_predictivemodel_timeline_region', table_name='predictivemodel_timeline')
    op.drop_table('predictivemodel_timeline')
    op.drop_index('ix_ideamodel_timeline_date', table_name='ideamodel_timeline')
    op.drop_index('ix_ideamodel_timeline_date_retrieved', table_name='ideamodel_timeline')
    op.drop_index('ix_ideamodel_timeline_source', table_name='ideamodel_timeline')
    op.drop_table('ideamodel_timeline')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ideamodel_timeline',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('date_retrieved', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('source', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('reported_cases', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('model_incident_cases', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('model_incident_cases_lower_PI', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('model_incident_cases_upper_PI', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('reported_cumulative_cases', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('model_cumulative_cases', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('model_cumulative_cases_lower_PI', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('model_cumulative_cases_upper_PI', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='ideamodel_timeline_pkey')
    )
    op.create_index('ix_ideamodel_timeline_source', 'ideamodel_timeline', ['source'], unique=False)
    op.create_index('ix_ideamodel_timeline_date_retrieved', 'ideamodel_timeline', ['date_retrieved'], unique=False)
    op.create_index('ix_ideamodel_timeline_date', 'ideamodel_timeline', ['date'], unique=False)
    op.create_table('predictivemodel_timeline',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('date_retrieved', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('region', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('cumulative_incidence', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('required_hospW', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('required_hospNonVentICU', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('required_hospVentICU', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('available_hospW', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('available_hospNonVentICU', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('available_hospVentICU', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('waiting_hospW', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('waiting_hospNonVentICU', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('waiting_hospVentICU', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='predictivemodel_timeline_pkey')
    )
    op.create_index('ix_predictivemodel_timeline_region', 'predictivemodel_timeline', ['region'], unique=False)
    op.create_index('ix_predictivemodel_timeline_date_retrieved', 'predictivemodel_timeline', ['date_retrieved'], unique=False)
    op.create_index('ix_predictivemodel_timeline_date', 'predictivemodel_timeline', ['date'], unique=False)
    op.drop_index(op.f('ix_healthregionsdata_date'), table_name='healthregionsdata')
    op.drop_table('healthregionsdata')
    op.drop_index(op.f('ix_healthregions_region_id'), table_name='healthregions')
    op.drop_index(op.f('ix_healthregions_fr_name'), table_name='healthregions')
    op.drop_index(op.f('ix_healthregions_eng_name'), table_name='healthregions')
    op.drop_table('healthregions')
    # ### end Alembic commands ###
